function luDecompostionRecurssive(Argument marix A):
    Let N = A.rows
    Let A11  = left-topmost element of A
    
    Base condtion:
    if dimension of A is 1X1:
        return [[1]] and matrix A
        
    define new matrix:
    aDash as submatrix of A dimension((N-1)X(N-1)) by removing top row and top column
    wT row-matrix dimension((1)X(N-1)) contains element from first row excluding the first element
    v column-matrix dimension((N-1)X(1)) contains element from first column excluding the top element
    
    calculate:
    NewSubmatrix = aDash-(martix multiplication of(v,wT))/A11
    
    Recurssive Function Call:
    Let submatrix(dimension((N-1)X(N-1))) LDash,Udash = output from the function luDecompostionRecurssive(argument NewSubmatrix) 
    
    construct a matrix Lower triangular matrix L by 
    1) horizontally joining matrix V/A11 on left of Ldash
    2) Vertically joining a matrix with dimension(1X(N)) with all element zero on top of Matrix obtained in step 1
    3) make top leftmost element 1
    
    construct a matrix Upper triangular matrix U by 
    1) horizontally joining matrix with dimension((N-1)X1) with all element zero on left of Udash
    2) horizontally adding element A11 on left of WT matrix
    3) vertically joining the matrix obtained in step two on top of matrix obtained on step 1
        
    return L and U
    
    
Define a function Det(argument matrix A):
    Let Lower triangular matrix be L and Upper triangular matrix be U
    L,U  = output from the function luDecompostionRecurssive(argument A)
    return product of digonal elements of L and U
    
    
    
Read the text from input file
Let N and M defines number of vertex and edges
Let Q be incidence matrix with dimension (NXM) initialize all values to zero
assign value:
for i=1 to M edges:
    Let u and v are vertices connection the edge i
    assign Q[u-1][i] = 1
    assign Q[v-1][i] = -1
    
Let L be Laplacian matrix with dimension (NXN)
define as matrix multiplication of Q and Transpose(Q)

let i = generate any random number from 0 to N-1
Let j = i
delete i-th row  and j-th column from Laplacian matrix L
return  the value of product of det(argument L) and (-1)^(i+j)   
